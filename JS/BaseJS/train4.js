// раздница между объектами и массивами

//           0  1  2
const arr = ["a", "b", "c"]; // массив

arr[10] = "3434";
console.log(arr[10]); // 3434
console.log(arr);
// если мы обратимся просто к переменной, по при console.log(arr); получим - [ 'a', 'b', 'c', <7 empty items>, '3434' ], где <7 empty items> - пустые элементы

const arrObj = {
  0: "a", // если 0 будет любой другой буквой, то при console.log(arrObj.буква наша); - мы получим значение "a"
  1: "b",
  2: "c",
  abc: {
    // если создать внутри объекта другой объект - то это допустимо
    df: [{}, {}],
    def: {},
  },
};

const b = "b"; // и в 12 строчке, мы можем уже не указывать ['b'] а просто [b]

// console.log(arr[1]); // 2
// arrObj.b = "1234"; // создаем новое свойство для b
arrObj[b] = "1234"; // более приоритетный вариант
console.log(arrObj["b"]); // также можно вот так: console.log(arrObj.b);
console.log(arrObj[1]); // выведет "b"

// const obj = {a: 1, b: 2}; // объект
const obj = {
  Anna: 500, // объекты как 'Anna', 'Alice' - можно записывать и без '', тк js понимает, что это - свойство и строчка
  Alice: 800,
};

["Anna", 500, "Alice", 800];

// BOOLEAN - булин, например (значения)
// LET - переменная
// если объект нужен - то он в {}
