// операторы в JS

"use strict";

console.log("arr" + " - object"); // arr - object
console.log(4 + "5"); // 9
// +, КОТОРЫЙ СТАВИТСЯ ПЕРЕД ЧЕМ-ТО НАЗЫВАЕТСЯ - УНАРНЫЙ

let incr = 10,
  decr = 10;

// incr++; // оператор инкримента (увелич. на 1)
// decr--; // оператор дикримента (уменьш. на 1)
// также будет работать, если написать: ++incr; --decr;
console.log(++incr); // 11
console.log(--decr); // 9

// когда '--, ++' - стоять в начале переменных, то это - Префиксная форма
// когда '--, ++' стоять в конце, то она - Посфиксная форма

console.log(5 % 2); // 1, тк мы взяли 5 и разделили его на 2 (на сколько возможно) и получили остаток - 1

// если 1 '=' - присваивание / если 2 '==' - равенство / если 3 '===' - сравнение
console.log(2 * 4 == 8); // true
//          число  строка
console.log(2 * 4 == "8"); // true
console.log(2 * 4 === "8"); // false
console.log(2 * 4 === 8); // true

console.log(2 + 2 * 2 === 8); // false, сперва мы умножаем '2 * 2', получаем '4', затем прибавляем и получаем '6', которая не равна 8
console.log(2 + 2 * 2 != 8); // true, тк '6' не равно '8'
console.log(2 + 2 * 2 != "6"); // false, тк у нас '6' = '6'
console.log(2 + 2 * 2 !== "6"); // true, тк слева - '6' в ввиде числа, а справа - '6' в ввиде строки

// && - and, и. работает тогда, когда 2 или более = правдивыми выражениями
// || - or, или

const isCheked = true,
  isClose = true;

console.log(isCheked && isClose); // 'true', тк оба верны. но, если мы поменяем хотяб 1 значение на 'false', то получим 'false'

const isCheked2 = true,
  isClose2 = true;

console.log(isCheked2 || !isClose2); // 'true', тк 1 из них = 'true'. когда мы пишем '!' спереди переменной, например от '!isClose2' - то он меняет его значение на противоположное

const isCheked3 = false,
  isClose3 = false;

console.log(isCheked3 || !isClose3); // 'true', когда мы пишем '!' спереди переменной, например от '!isClose3' - то он меняет его значение на противоположное
